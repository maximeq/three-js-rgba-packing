!(function(e, t) {
"object" == typeof exports && "undefined" != typeof module
? (module.exports = t(require("three-full")))
: "function" == typeof define && define.amd
? define(["three-full"], t)
: (e.THREERGBAPacking = t(e.THREE));
})(this, function(e) {
"use strict";
e = e && e.hasOwnProperty("default") ? e.default : e;
var t = {
encodeUInt32: function(e, t) {
throw "Not implemented yet.";
},
decodeUInt32: function(e) {
throw "Not implemented yet.";
},
encodeUnitFloat32: function(e, t) {
((t = t || new Float32Array([0, 0, 0, 0]))[0] = 1 * e),
(t[1] = 255 * e),
(t[2] = 65025 * e),
(t[3] = 16581375 * e);
for (var n = 0; n < 4; ++n) t[n] -= Math.floor(t[n]);
return (t[0] -= t[1] / 255), (t[1] -= t[2] / 255), (t[2] -= t[3] / 255), t;
},
decodeUnitFloat32: function(e) {
return e[0] + e[1] / 255 + e[2] / 65025 + e[3] / 16581375;
},
glslEncodeUnitFloat32: [
"vec4 encodeUnitFloat32 (float f) {",
"    vec4 rgba = vec4(1.,255.,65025.,16581375.) * f;",
"    rgba = fract(rgba);",
"    rgba -= rgba.yzww * vec2(1./255., 0.).xxxy;",
"    return rgba;",
"}"
].join("\n"),
glslDecodeUnitFloat32: [
"float decodeUnitFloat32 (vec4 rgba) {",
"    return dot(rgba, vec4(1.,1./255.,1./65025.,1./16581375.));",
"}"
].join("\n")
};
return (e.RGBAPacking = t), t;
});
